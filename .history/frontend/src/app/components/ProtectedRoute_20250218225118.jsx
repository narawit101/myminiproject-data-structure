'use'
import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";

export default function ProtectedRoute({ children }) {
  const [isAuthenticated, setIsAuthenticated] = useState(null); // ‡πÉ‡∏ä‡πâ `null` ‡πÅ‡∏ó‡∏ô `false`
  const router = useRouter();

  useEffect(() => {
    const token = localStorage.getItem("token");

    if (!token) {
      setIsAuthenticated(false); // üîπ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô false ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏•‡πá‡∏≠‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
      router.push("/login");
      return;
    }

    try {
      const payload = JSON.parse(atob(token.split(".")[1])); // Decode JWT
      if (payload.role === "admin") {
        setIsAuthenticated(true);
      } else {
        setIsAuthenticated(false);
        router.push("/unauthorized");
      }
    } catch (error) {
      setIsAuthenticated(false);
      router.push("/login");
    }
  }, []);

  if (isAuthenticated === null) return <p>Loading...</p>; // üîπ ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ä‡πá‡∏Ñ token ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô

  if (!isAuthenticated) return null;

  return <>{children}</>;
}
