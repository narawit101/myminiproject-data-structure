"use client";

import { useEffect, useState } from "react";
import Navbar from "../components/Nav";
import ProtectedRoute from "../components/ProtectedRoute";

export default function TransactionManagement() {
  const [transactions, setTransactions] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch("http://localhost:5000/transaction/get")
      .then((res) => res.json())
      .then((data) => {
        console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°:", data);
        setTransactions(data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("‚ùå Error:", err);
        setLoading(false);
      });
  }, []);

  const handleStatusChange = async (transactionId, citizenId, newStatus, targetGroupId) => {
    if (!transactionId || !citizenId || !newStatus || !targetGroupId) {
      console.error("‚ùå ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô undefined ‡∏´‡∏£‡∏∑‡∏≠ null", { transactionId, citizenId, newStatus, targetGroupId });
      alert("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
      return;
    }

    console.log("üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", { transactionId, citizenId, newStatus, targetGroupId });

    try {
      const response = await fetch("http://localhost:5000/transaction/update", {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ transaction_id: transactionId, citizen_id: citizenId, status: newStatus, target_group_id: targetGroupId }),
      });

      const responseData = await response.json();
      console.log("üì• ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå:", responseData);

      if (response.ok) {
        alert("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
        setTransactions((prev) =>
          prev.map((item) =>
            item.transaction_id === transactionId ? { ...item, status: newStatus } : item
          )
        );
      } else {
        alert(`‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${responseData.error || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î"}`);
      }
    } catch (err) {
      console.error("‚ùå Error updating status:", err);
    }
  };

  // ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥"
  const approveAll = async () => {
    const pendingTransactions = transactions.filter((t) => t.status === "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥");
    if (pendingTransactions.length === 0) {
      alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥");
      return;
    }

    for (const transaction of pendingTransactions) {
      await handleStatusChange(transaction.transaction_id, transaction.citizen_id, "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß", transaction.target_group_id);
    }

    alert("‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
  };

  if (loading) return <p className="text-center p-4">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;

  return (
    <ProtectedRoute>
      <Navbar />
      <div className="p-6 bg-gray-100 min-h-screen">
        <h2 className="text-2xl font-bold mb-5">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°</h2>

        {/* ‚úÖ ‡∏õ‡∏∏‡πà‡∏° "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î" */}
        <button className="bg-green-500 text-white px-4 py-2 rounded mb-4 hover:bg-green-600" onClick={approveAll}>
          ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        </button>

        <table className="w-full border-collapse border border-gray-300 bg-white shadow-md">
          <thead>
            <tr className="bg-gray-200">
              <th className="border p-2">Citizen ID</th>
              <th className="border p-2">‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•</th>
              <th className="border p-2">‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</th>
              <th className="border p-2">‡∏≠‡∏≤‡∏¢‡∏∏</th>
              <th className="border p-2">‡∏≠‡∏≤‡∏ä‡∏µ‡∏û</th>
              <th className="border p-2">‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</th>
              <th className="border p-2">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
              <th className="border p-2">‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï</th>
            </tr>
          </thead>
          <tbody>
            {transactions.length > 0 ? (
              transactions.map((item, index) => (
                <tr key={item.transaction_id} className="border">
                  <td className="p-2">{item.citizen_id}</td>
                  <td className="p-2">{item.fname} {item.lname}</td>
                  <td className="p-2">{item.national_id}</td>
                  <td className="p-2">{item.age} ‡∏õ‡∏µ</td>
                  <td className="p-2">{item.occupation || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</td>
                  <td className="p-2">{item.group_name}</td>
                  <td className="p-2">
                    <span className={`px-2 py-1 rounded-md text-white ${item.status === "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß" ? "bg-green-500" : item.status === "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" ? "bg-yellow-500" : "bg-gray-400"}`}>
                      {item.status}
                    </span>
                  </td>
                  <td className="p-2">
                    {item.status === "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" ? (
                      <button className="bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600" onClick={() => handleStatusChange(item.transaction_id, item.citizen_id, "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß", item.target_group_id)}>
                        ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                      </button>
                    ) : (
                      <button className="bg-gray-500 text-white px-3 py-1 rounded cursor-not-allowed" disabled>
                        ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß
                      </button>
                    )}
                  </td>
                </tr>
              ))
            ) : (
              <tr>
                <td colSpan="8" className="text-center p-4">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td>
              </tr>
            )}
          </tbody>
        </table>
      </div>
    </ProtectedRoute>
  );
}
