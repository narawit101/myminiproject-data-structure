"use client";

import { useEffect, useState } from "react";
import Navbar from "../components/Nav";
import ProtectedRoute from "../components/ProtectedRoute";

export default function TransactionManagement() {
  const [transactions, setTransactions] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch("http://localhost:5000/transaction/get")
      .then((res) => res.json())
      .then((data) => {
        console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°:", data);
        setTransactions(data);
        setLoading(false);
      })
      .catch((err) => {
        console.error("‚ùå Error:", err);
        setLoading(false);
      });
  }, []);

  const handleStatusChange = async (
    transactionId,
    citizenId,
    newStatus,
    targetGroupId
  ) => {
    console.log("üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", {
      transaction_id: transactionId,
      citizen_id: citizenId,
      status: newStatus,
      target_group_id: targetGroupId,
    });

    if (!transactionId || !citizenId || !newStatus || !targetGroupId) {
      console.error("‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö", {
        transaction_id: transactionId,
        citizen_id: citizenId,
        status: newStatus,
        target_group_id: targetGroupId,
      });
      alert("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà");
      return;
    }

    try {
      const response = await fetch("http://localhost:5000/transaction/update", {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          transaction_id: transactionId,
          citizen_id: citizenId,
          status: newStatus,
          target_group_id: targetGroupId,
        }),
      });

      const responseData = await response.json();
      console.log("‚úÖ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå:", responseData);

      if (response.ok) {
        alert("‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
        setTransactions((prev) =>
          prev.map((item) =>
            item.citizen_id === citizenId
              ? { ...item, status: newStatus }
              : item
          )
        );
      } else {
        alert(`‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: ${responseData.message || "‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå"}`);
      }
    } catch (err) {
      console.error("‚ùå Error updating status:", err);
    }
  };

  if (loading) return <p className="text-center p-6 text-lg font-semibold">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;

  return (
    <ProtectedRoute>
      <Navbar />

      <div className="p-6 bg-gray-100 min-h-screen">
        <h2 className="text-3xl font-bold text-gray-800 mb-6 text-center">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°</h2>

        <div className="overflow-x-auto">
          <table className="w-full border-collapse border border-gray-300 bg-white shadow-lg rounded-lg">
            <thead>
              <tr className="bg-blue-500 text-white text-left">
                <th className="border p-4">Citizen ID</th>
                <th className="border p-4">‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•</th>
                <th className="border p-4">‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô</th>
                <th className="border p-4">‡∏≠‡∏≤‡∏¢‡∏∏</th>
                <th className="border p-4">‡∏≠‡∏≤‡∏ä‡∏µ‡∏û</th>
                <th className="border p-4">‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢</th>
                <th className="border p-4">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
                <th className="border p-4 text-center">‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï</th>
              </tr>
            </thead>
            <tbody>
              {transactions.length > 0 ? (
                transactions.map((item, index) => (
                  <tr key={index} className="border-b hover:bg-gray-50 transition duration-200">
                    <td className="p-4">{item.citizen_id}</td>
                    <td className="p-4">{item.fname} {item.lname}</td>
                    <td className="p-4">{item.national_id}</td>
                    <td className="p-4">{item.age} ‡∏õ‡∏µ</td>
                    <td className="p-4">{item.occupation || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</td>
                    <td className="p-4">{item.group_name}</td>
                    <td className="p-4 text-center">
                      <span
                        className={`px-3 py-1 rounded-md text-white text-sm font-semibold ${
                          item.status === "completed"
                            ? "bg-green-500"
                            : "bg-yellow-500"
                        }`}
                      >
                        {item.status === "completed" ? "‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô" : "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£"}
                      </span>
                    </td>
                    <td className="p-4 text-center">
                      <button
                        className="bg-blue-600 text-white px-4 py-2 rounded-lg shadow hover:bg-blue-700 transition duration-300"
                        onClick={() =>
                          handleStatusChange(
                            item.transaction_id,
                            item.citizen_id,
                            item.status === "completed" ? "pending" : "completed",
                            item.target_group_id
                          )
                        }
                      >
                        ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                      </button>
                    </td>
                  </tr>
                ))
              ) : (
                <tr>
                  <td colSpan="8" className="text-center p-6 text-gray-600 text-lg font-semibold">
                    ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>
      </div>
    </ProtectedRoute>
  );
}
